name: Package compatibility

on:
  pull_request:

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "yarn"
        env:
          SKIP_YARN_COREPACK_CHECK: "1"
      - run: corepack enable
      - run: yarn install
      - run: yarn build

      - name: Generate keys and set env
        run: |
          yarn gen:keys
          echo "XMTP_ENV=dev" >> .env

      - name: Run agent
        run: |
          timeout 20s yarn dev | tee output.log
          if grep -q "Waiting for messages..." output.log; then
            echo "Success: Agent started successfully and is waiting for messages"
            exit 0
          else
            echo "Error: Agent did not reach 'Waiting for messages...' state"
            exit 1
          fi

  package:
    needs: [check]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20, 21, 22, 23]
        package-manager: [npm, yarn, pnpm, bun]
      fail-fast: false

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          path: gm-bot

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Enable Corepack for Yarn
        if: matrix.package-manager == 'yarn'
        run: corepack enable

      - name: Install pnpm
        if: matrix.package-manager == 'pnpm'
        uses: pnpm/action-setup@v3
        with:
          version: 10.7.0

      - name: Install Bun
        if: matrix.package-manager == 'bun'
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Clean previous installations
        run: |
          cd gm-bot
          rm -rf node_modules
          rm -rf dist
          rm -rf .yarn
          rm -f package-lock.json
          rm -f yarn.lock
          rm -f pnpm-lock.yaml
          rm -f bun.lockb

      - name: Install dependencies with npm
        if: matrix.package-manager == 'npm'
        run: |
          cd gm-bot
          npm install

      - name: Install dependencies with yarn
        if: matrix.package-manager == 'yarn'
        run: |
          cd gm-bot
          yarn install

      - name: Install dependencies with pnpm
        if: matrix.package-manager == 'pnpm'
        run: |
          cd gm-bot
          pnpm install
          pnpm add @xmtp/node-bindings

      - name: Install dependencies with bun
        if: matrix.package-manager == 'bun'
        run: |
          cd gm-bot
          bun install

      - name: Build project
        run: |
          cd gm-bot
          ${{ matrix.package-manager }} run build
